//Problem
/*Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
*/

//Solution

class Solution {
    public int reverse(int x) {
        
        long rev=0;
        int temp=0;
        boolean flag=true;
        
        if(x<Math.pow(-2,31) || x>Math.pow(2,31)-1)
        {
            return 0;
        }
        
        if(x<0)
        {
            x=x*-1;
            flag=false;
        }
        while(x!=0)
        {
            temp=x % 10;
            rev=rev*10+temp;
            x=x/10;
        }
        if(flag==false)
        {
            rev=-1*rev;
        }
        
        if(rev<Math.pow(-2,31) || rev>Math.pow(2,31)-1)
        {
            return 0;
        }
        return (int)rev;
    }
}
